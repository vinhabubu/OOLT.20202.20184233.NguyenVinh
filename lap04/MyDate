import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.DateTimeException;
import java.util.*;

public class MyDate {
    private int day;
    private int month;
    private int year;
    private static Map<String, Integer> m = new HashMap<>()<String, Integer>();
    private static Map<Integer, String> month_map = new HashMap<Integer, String>();
    private static DateTimeFormatter format;



    public MyDate() {
        LocalDate date = LocalDate.now();
        this.day = date.getDayOfMonth();
        this.month = date.getMonthValue();
        this.year = date.getYear();
    }



    public MyDate(int day, int month, int year) {
        this(); 
        try {
            LocalDate date = LocalDate.parse(day + "/" + month + "/" + year, DateTimeFormatter.ofPattern("[d/M/y]"));
            this.day = date.getDayOfMonth();
            this.month = date.getMonthValue();
            this.year = date.getYear();
        } catch (DateTimeException e) {
            System.out.println("Date is wrong");
        }
    }



    public MyDate(String strDate) {
        this(); 
        accept(strDate);
    }

    public MyDate(String day, String month, String year) {
        this(); 
        try {
            int intDay = m.get(day.toLowerCase());
            int intMonth = m.get(month.toLowerCase());
            String[] split_year = year.split(" ");
            String strYear = m.get(split_year[0]).toString() + m.get(split_year[1]).toString();
            int intYear = Integer.parseInt(strYear);

            this.day = intDay;
            this.month = intMonth;
            this.year = intYear;
        }
        catch (Exception e) {
            System.out.println("Invalid date time!");
        }
    }



    public int getDay() {
        return this.day;
    }

    public void setDay(int day) {
        try {
            LocalDate date = LocalDate.parse(day + "/" + this.month + "/" + this.year, DateTimeFormatter.ofPattern("[d/m/y]"));
            this.day = date.getDayOfMonth();
            this.month = date.getMonthValue();
            this.year = date.getYear();
        } catch (DateTimeException e) {
            System.out.println("Day is wrong");
        }
    }



    public int getMonth() {
        return this.month;
    }

    public void setMonth(int month) {
        if (month >= 1 && month <= 12)
            this.month = month;
        else
            System.out.println("Month is wrong");
    }



    public int getYear() {
        return this.year;
    }



    public void setYear(int year) {
        if (year > 0)
            this.year = year;
        else
            System.out.println("Year is wrong");
    }



    public void print() {
        String out = month_map.get(month) + " " + day;
        switch (day) {
            case 1:
                out += "st ";
                break;
            case 2:
                out += "nd ";
                break;
            case 3:
                out += "rd ";
                break;
            default:
                out += "th ";
                break;
        }
        out += year;

        System.out.println("Date: " + out);
    }



    public void accept(String strDate)
    {
        try {
            strDate = strDate.replaceAll("st|nd|rd|th", ""); 
            LocalDate date = LocalDate.parse(strDate, format);
            day = date.getDayOfMonth();
            month = date.getMonthValue();
            year = date.getYear();
        } catch (DateTimeException e) {
            System.out.println("Date is Wrong");
        }
    }

    static {
    
        
        String pattern = "[d[/][-][.][ ]m[/][-][.][ ]yyyy]"
        + "[d mmm[,] yyyy]"
        + "[mmm d[,] yyyy]"
        + "[mmmm d[,] yyyy]"
        + "[ddmmyyyy]";

        format = DateTimeFormatter.ofPattern(pattern);
        


        String[] day_s = {"first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth",
            "eleventh", "twelfth", "thirdteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth",
            "nineteenth", "twenty", "twenty-first", "twenty-second", "twenty-third", "twenty-fourth", "twenty-fifth",
            "twenty-sixth", "twenty-seventh", "twenty-eighth", "twenty-ninth", "thirty", "thirty-first"}; 
       
            
        String[] month_s = {"January", "February", "March", "April", "May", "June", "July", "August", "September", 
            "October", "November", "December"};    


        String[] more_years = {"twenty-one", "twenty-two", "twenty-three", "twenty-four", "twenty-five", "twenty-six",
            "twenty-seven", "twenty-eigth", "twenty-nine","thirty","thirty-one","thirty-two","thirty-three","thirty-four",
        "thirty-five","thirty_six","thirty-seven","thirty-eight","thirty-nine"}; 



        for (int i = 0; i < 31; i++)
            m.put(day_s[i], i+1);




        for (int i = 0; i < 12; i++) {
                m.put(month_s[i].toLowerCase(), i+1);
                month_map.put(i+1, month_s[i]);
            }
        

        for (int i = 0; i < more_years.length; i++)
            m.put(more_years[i], i+21);
    }
}
